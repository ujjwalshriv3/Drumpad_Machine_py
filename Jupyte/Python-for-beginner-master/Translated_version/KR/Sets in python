파이썬에서 집합을 만들려면 set() 함수를 사용할 수 있습니다.
  example=[1,2,2,3,4,5,5,5,5,5]
  x= set(example)
  print(x)
    #{1, 2, 3, 4, 5}
  x.pop()
    #1
  x.pop()
    #2
  print(x)
    #{3,4,5}
    
>>> example=[1,2,2,3,4,5,5,5,5,5,0]
>>> x=set(example)
>>> print(x)
{0, 1, 2, 3, 4, 5}
>>> x.pop()
0
>>> print(x)
{1, 2, 3, 4, 5}

>>> x.discard(4)
>>> print(x)
{1, 2, 3, 5}

내장 셋팅된 메소드 :
자세한 내용을 보려면 help(set())를 입력하십시오.

 |  add(...)
 |      세트에 요소를 추가합니다.
 |
 |		요소가 이미 존재하는 경우에는 효과가 없습니다.
 |  
 |  clear(...)
 |      이 세트에서 모든 요소를 제거합니다.
 |  
 |  copy(...)
 |      세트의 얕은 복사본을 돌려줍니다.
 |  
 |  difference(...)
 |      둘 이상의 세트 차이를 새로운 세트로 반환합니다.
 |      
 |      (즉,이 세트에 있지만 다른 것은 아닌 모든 요소.)
 |  
 |  difference_update(...)
 |      이 세트에서 다른 세트의 모든 요소를 제거합니다.
 |  
 |  discard(...)
 |		멤버인 경우 세트에서 요소를 제거합니다.
 |      
 |      요소가 멤버가 아닌 경우 아무 것도 수행하지 않습니다.
 |  
 |  intersection(...)
 |      두 세트의 교집합을 새로운 세트로 반환합니다.
 |      
 |      (즉, 두 세트에있는 모든 요소.)
 |  
 |  intersection_update(...)
 |      자신과 다른 부분의 교차로 세트를 업데이트합니다.
 |  
 |  isdisjoint(...)
 |      두 세트에 null 교차가 있으면 True를 반환합니다.
 |  
 |  issubset(...)
 |      다른 세트에이 세트가 포함되어 있는지 보고하합니다.
 |  
 |  issuperset(...)
 |      이 세트에 다른 세트가 포함되어 있는지보고합니다.
 |  
 |  pop(...)
 |      임의의 세트 요소를 제거하고 반환합니다.
 |      세트가 비어있는 경우 KeyError 발생.
 |  
 |  remove(...)
 |      세트에서 요소를 제거합니다. 멤버여야 합니다.
 |      
 |      요소가 멤버가 아닌 경우 KeyError를 발생시킵니다.
 |  
 |  symmetric_difference(...)
 |      두 세트의 대칭 차이를 새로운 세트로 반환합니다.
 |      
 |      (즉, 정확히 하나의 세트에있는 모든 요소)
 |  
 |  symmetric_difference_update(...)
 |      자체와 다른 대칭적인 차이로 세트를 업데이트합니다.
 |  
 |  union(...)
 |      집합 union을 새로운 집합으로 반환합니다.
 |      
 |      (즉, 어느 한 세트에있는 모든 요소)
 |  
 |  update(...)
 |      자신과 다른 사람의 조합으로 세트를 업데이트하십시오.
